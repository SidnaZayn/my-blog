---
const { src = '/astronaut-hero-img.webp' } = Astro.props
---

<section class="hero mt-20 flex h-[100vh] items-center justify-center">
  <div class="mx-5">
    <div class="grid grid-cols-1 items-center gap-8 xl:grid-cols-2 xl:gap-24">
      <div class="flex flex-col items-center gap-8 xl:items-start" data-aos="fade-up">
        <h1 class="text-center text-4xl xl:text-left xl:text-6xl">
          <p
            class="text-gradient mb-0 text-center text-base font-light tracking-[0.44em] xl:mb-2 xl:ml-1 xl:text-left xl:text-2xl"
          >
            SIDNA M. ZEN
          </p>
          <slot>
            <p class="mb-3">Code Junkies</p><span class="text-gradient mb-3" id="sub_hero"></span>
          </slot>
        </h1>
        <button class="btn-gradient dropshadow-hover hidden xl:block">EXPLORE</button>
      </div>
      <img
        class="dropshadow-img mx-auto block h-80 md:h-4/5"
        src={src}
        alt="hero_img"
        decoding="async"
        data-aos="fade-up"
        data-aos-delay="200"
      />
      <div class="flex justify-center xl:hidden">
        <a href="#about">
          <button class="btn-gradient dropshadow-hover" data-aos="fade-up" data-aos-delay="300">EXPLORE</button>
        </a>
      </div>
    </div>
  </div>
</section>

<style lang="scss">
  .text-gradient {
    background: linear-gradient(315deg, var(--primary-200) 25%, var(--secondary-500));
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  :global(.darkmode .text-gradient) {
    background: linear-gradient(315deg, var(--primary-200) 25%, var(--secondary-400));
    background-clip: border-box;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .btn-gradient {
    font-weight: bold;
    text-decoration: none;
    text-align: center;
    color: var(--neutral-900);
    border: none;
    border-radius: 3px;
    background: linear-gradient(349deg, #55ec8f, #72eeda, #3e8378);
    background-size: 600% 600%;

    -webkit-animation: changingGradient 5s ease infinite;
    -moz-animation: changingGradient 5s ease infinite;
    animation: changingGradient 5s ease infinite;
  }
  .dropshadow-hover {
    transition: 0.3s;
  }

  .dropshadow-hover:hover {
    filter: drop-shadow(0px 0px 8px rgb(6, 223, 223));
    color: #ffffff;
  }

  .dropshadow-img {
    animation: movingShadow 10s ease-in-out infinite;
  }

  @keyframes movingShadow {
    0% {
      filter: drop-shadow(0px 0px 8px rgba(255, 255, 255, 0.1));
    }
    15% {
      filter: drop-shadow(-10px -10px 8px rgba(255, 255, 255, 0.4));
    }
    30% {
      filter: drop-shadow(10px -10px 8px rgba(255, 255, 255, 0.4));
    }
    60% {
      filter: drop-shadow(10px 10px 8px rgba(255, 255, 255, 0.4));
    }
    75% {
      filter: drop-shadow(-10px 10px 8px rgba(255, 255, 255, 0.4));
    }
    100% {
      filter: drop-shadow(0px 0px 8px rgba(255, 255, 255, 0.1));
    }
  }

  @-webkit-keyframes changingGradient {
    0% {
      background-position: 0% 38%;
    }
    50% {
      background-position: 100% 63%;
    }
    100% {
      background-position: 0% 38%;
    }
  }
  @-moz-keyframes changingGradient {
    0% {
      background-position: 0% 38%;
    }
    50% {
      background-position: 100% 63%;
    }
    100% {
      background-position: 0% 38%;
    }
  }
  @keyframes changingGradient {
    0% {
      background-position: 0% 38%;
    }
    50% {
      background-position: 100% 63%;
    }
    100% {
      background-position: 0% 38%;
    }
  }
</style>

<script>
  import Typed from 'typed.js'

  const arr = ['Innovate', 'Crafted', 'Elevate']
  new Typed('#sub_hero', {
    strings: arr,
    loop: true,
    typeSpeed: 100,
    backSpeed: 75,
  })
</script>
